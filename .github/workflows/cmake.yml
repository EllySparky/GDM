name: CMake

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  BUILD_TYPE: Release

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Install Linux Dependencies
        run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

      - name: Install gcovr
        run: sudo apt-get install gcovr

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCOVERAGE=ON

      - name: Build All
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Install Linux Dependencies
        run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

      - name: Run Unit Tests
        working-directory: ${{github.workspace}}/build
        run: |
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          cd ${{github.workspace}}/build/tests
          ctest --output-on-failure -C ${{env.BUILD_TYPE}}

      - name: Extract coverage percentage
        id: extract_coverage
        run: |
          coverage=$(gcovr -r . --exclude-unreachable-branches --filter='lib/' | grep 'TOTAL' | awk '{print $NF}' | sed 's/%//')
          echo "coverage=${coverage}" >> $GITHUB_ENV

      - name: Set badge color based on coverage
        id: set_color
        run: |
          if (( $(echo "${{ env.coverage }} < 50" | bc -l) )); then
            color="red"
          elif (( $(echo "${{ env.coverage }} < 75" | bc -l) )); then
            color="yellow"
          else
            color="green"
          fi
            echo "color=${color}" >> $GITHUB_ENV

      - name: Create Coverage Badge
        uses: emibcn/badge-action@v2.0.2
        with:
          label: Coverage ${{ github.ref == 'refs/heads/main' && 'main' || 'develop' }}
          label-color: black
          status: ${{ env.coverage }}
          color: ${{ env.color }}
          style: flat
          path: docs/coverage/${{ github.ref == 'refs/heads/main' && 'main.svg' || 'develop.svg' }}
        id: coverage_badge

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
